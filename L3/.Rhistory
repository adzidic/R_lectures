boxplot(finger.length~hand, main = "Box plot of finger length"", xlab="Hand", ylab="digit length(mm)")
boxplot(finger.length~hand, main = "Box plot of finger length", xlab="Hand", ylab="digit length(mm)")
mydata <- read.table("finger_lengths.csv", header=TRUE, sep=",")
#header=TRUE means that in the first row are the names of the variables
#sep="," means that data are separated with comma
mydata
boxplot(finger.length~hand, main = "Box plot of finger length", xlab="Hand", ylab="digit length(mm)")
boxplot(finger.length~hand, main = "Box plot of finger length", xlab="Hand", ylab="digit length(mm)")
boxplot(mydata$finger.length~mydata$hand, main = "Box plot of finger length", xlab="Hand", ylab="digit length(mm)")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls()) # remove everything currently held in the R memory
graphics.off() # close all open graphics windows
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls()) # remove everything currently held in the R memory
graphics.off() # close all open graphics windows
rm(list=ls()) # remove everything currently held in the R memory
graphics.off() # close all open graphics windows
getwd()
setwd("/Users/")
options(repos=c(CRAN="http://cran.us.r-project.org"))
install.packages("siar")
library("siar")
knitr::opts_chunk$set(echo = TRUE)
getwd()
getwd()
setwd("~/Documents/PROJECTS/Attach_detach")
getwd()
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd("~/Documents/PROJECTS")
getwd()
setwd(/Documents)
setwd("/Documents"")
setwd("~/Documents")
getwd()
plot(pressure)
getwd()
setwd("~/Documents/PROJECTS")
getwd()
class(mouse.wts)
rm(list = ls()) #clearing the environment of any left over objects from a previous analysis
mouse.wts <-c(16.6, 12, 10.9, 15.9, 25, 14.5, 18.2, 13.8, 21, 21.5) #creating a vector with house mouse body weight in grams
class(mouse.wts)
getwd()
setwd("~/Documents")
getwd()
getwd()
getwd()
setwd("~/Documents")
setwd("~/Documents")
getwd()
getwd()
require("knitr")
opts_knit$set(root.dir = "~/gits/project/")
require("knitr")
opts_knit$set(root.dir = "~/gits/project/")
require("knitr")
opts_knit$set(root.dir = "~/gits/project/")
require("knitr")
opts_knit$set(root.dir = "~/gits/project/")
getwd()
setwd("~/Documents/PROJECTS/R_TRINITY_ANDREW")
require("knitr")
opts_knit$set(root.dir = "~/Documents/PROJECTS/R_TRINITY_ANDREW")
setwd("~/Documents/PROJECTS")
getwd()
getwd()
getwd()
getwd()
boxplot(mouse.wts, main="House mouse weight", xlab="Species - Mouse", ylab="Weight (g)") #boxplot for the variable mouse.wts
packages()
package()
data()
iris
head(iris)
species=="setosa"
iris.species=="setosa"
iris$species=="setosa"
iris$Species=="setosa"
x<-seq(-2.1,6.1,0.1)
Z<- x^3-6x^2+4x+12
x<-seq(-2.1,6.1,0.1)
Z<- ((x)^3-(6x)^2+4x+12)
x<-seq(-2.1,6.1,0.1)
Z<- ((x)^3-6(x)^2+4x+12)
x<-seq(-2.1,6.1,0.1)
Z<- ((x)^3-6(x)^2+4*x+12)
x<-seq(-2.1,6.1,0.1)
Z<- ((x)^3-6(x)^2+4*x+12)
x<-3 #seq(-2.1,6.1,0.1)
Z<- ((x)^3-6(x)^2+4*x+12)
x<-3 #seq(-2.1,6.1,0.1)
Z<- (4*x+12)
x<-3 #seq(-2.1,6.1,0.1)
Z<- (x^2+4*x+12)
x<-3 #seq(-2.1,6.1,0.1)
Z<- (3*x^3+x^2+4*x+12)
x<-seq(-2.1,6.1,0.1)
Z<- (3*x^3+x^2+4*x+12)
x<-seq(-2.1,6.1,0.1)
Z<- (3*x^3+x^2+4*x+12)
x<-seq(-2.1,6.1,0.1)
Z<- (3*x^3+x^2+4*x+12)
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
plot(Z)
x<-seq(-2.1,6.1,1)
Z<- (x^3-6*x^2+4*x+12)
plot(Z)
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
plot(Z)
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
plot(Z)
abline(h=0)
abline(v=0)
x<-seq(-2,1,6,1,0,1)
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
plot(Z)
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
plot(Z, type="l", col="red", xlim=c(-5, 6), ylim=c(-10, 10))
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
Z
plot(Z, type="l", col="red", xlim=c(-5, 6), ylim=c(-10, 10))
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
x
Z<- (x^3-6*x^2+4*x+12)
Z
plot(Z, type="l", col="red", xlim=c(-5, 6), ylim=c(-10, 10))
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
x
Z<- (x^3-6*x^2+4*x+12)
Z
plot(Z, type="l", col="red", xlim=c(-5, 6), ylim=c(-50, 10))
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
x
Z<- (x^3-6*x^2+4*x+12)
Z
plot(Z, type="l", col="red", xlim=c(-5, 6), ylim=c(-50, 50))
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
x
Z<- (x^3-6*x^2+4*x+12)
Z
plot(Z, type="l", col="red")
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
x
Z<- (x^3-6*x^2+4*x+12)
Z
plot(x,Z, type="l", col="red")
abline(h=0)
abline(v=0)
x<-seq(-2.1,6.1,0.1)
x
Z<- (x^3-6*x^2+4*x+12)
Z
plot(x,Z, type="l", col="red")
x<-seq(-2.1,6.1,1)
x
Z1<- (x^3-6*x^2+4*x+12)
Z
plot(x,Z, type="l", col="red")
x<-seq(-2.1,6.1,1)
x
Z1<- (x^3-6*x^2+4*x+12)
Z
plot(x,Z1, type="l", col="red")
boxplot(mouse.wts, main="House mouse weight", xlab="Species - Mouse", ylab="Weight (g)") #boxplot for the variable mouse.wts
rm(list = ls()) #clearing the environment of any left over objects from a previous analysis
mouse.wts <-c(16.6, 12, 10.9, 15.9, 25, 14.5, 18.2, 13.8, 21, 21.5) #creating a vector with house mouse body weight in grams
boxplot(mouse.wts, main="House mouse weight", xlab="Species - Mouse", ylab="Weight (g)") #boxplot for the variable mouse.wts
x<-seq(-2.1,6.1,0.1)
Z<- (x^3-6*x^2+4*x+12)
plot(x,Z, type="l")
x<-seq(-2.1,6.1,1)
Z1<- (x^3-6*x^2+4*x+12)
plot(x,Z1, type="l")
library(readr)
library(dplyr)
## Download data from RStudio (if we haven't already)
if(!file.exists("data/2016-07-20.csv.gz")) {
download.file("http://cran-logs.rstudio.com/2016/2016-07-20.csv.gz",
"data/2016-07-20.csv.gz")
}
cran <- read_csv("data/2016-07-20.csv.gz", col_types = "ccicccccci")
cran %>% filter(package == "filehash") %>% nrow
[1] 179
library(readr)
library(dplyr)
## Download data from RStudio (if we haven't already)
if(!file.exists("data/2016-07-20.csv.gz")) {
download.file("http://cran-logs.rstudio.com/2016/2016-07-20.csv.gz",
"data/2016-07-20.csv.gz")
}
cran <- read_csv("data/2016-07-20.csv.gz", col_types = "ccicccccci")
cran %>% filter(package == "filehash") %>% nrow
download.file("http://cran-logs.rstudio.com/2016/2016-07-20.csv.gz", "data/2016-07-20.csv.gz")
dir()
Rennes
ls()
c<-c(1,2,3)
rank(c)
c<-c(5,2,3)
rank(c)
c<-c(5,2,7)
rank(c)
install.packages("tidyverse")
library(tidyverse)
ggplot2::mpg
mpg
ggplot(data=mpg) + geom_point(mapping = aes(x=displ, y= hwy))
ggplot(data=mpg)
mtcars
str(mtcars)
?mpg
ggplot(data=mpg) + geom_point(mapping = aes(x=hwy, y= cyl))
ggplot(data=mpg) + geom_point(mapping = aes(x=class, y= drv))
install.packages(ggplot2)
install.packages("tidyverse")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
str(mpg)
qplot(disp,hwy, data=mpg)+
facet_grid(.~cyl)
qplot(displ,hwy, data=mpg)+
facet_grid(.~cyl)
qplot(displ,hwy, data=mpg)+
facet_grid(.~cyl)
qplot(displ,hwy, data=mpg)+
facet_grid(drv~.)
qplot(displ,hwy, data=mpg)+
facet_grid(drv~cyl)
qplot(displ,hwy, data=mpg)+
facet_wrap(~class)
knitr::opts_chunk$set(echo = TRUE)
getwd()
setwd("~/Documents/PROJECTS")
setwd("~/Documents/PROJECTS/AMS")
setwd("~/Documents/PROJECTS")
setwd("~/Documents/PROJECTS")
summary(cars)
apples <-0.46
oranges <- 0.89
bananas <- 0.75
shopping <- 5*apples + 3*oranges + 8*bananas
apples <-0.46
oranges <- 0.89
bananas <- 0.75
shopping <- 5*apples + 3*oranges + 8*bananas
shopping
apples <-0.46
oranges <- 0.89
bananas <- 0.75
shopping <- 5*apples + 3*oranges + 8*bananas
# check if all objects exist in R
apples
oranges
bananas
shopping
apples <-0.46
oranges <- 0.89
bananas <- 0.75
shopping <- 5*apples + 3*oranges + 8*bananas
apples
oranges
bananas
shopping
# Some Housekeeping
rm(list=ls()) # remove everything currently held in the R memory
# These are the lengths of my digits on my left and right hands
# measures in mm.
left <- c(5.8, 7.5, 8.5, 7.3, 5.8)
right <- c(5.7, 7.3, 8.3, 7.0, 5.6)
boxplot(cbind(left,right))
boxplot(cbind(left,right), xlab="Hand", ylab="digit length(mm)")
boxplot(cbind(left,right), xlab="Hand", ylab="Hand length(mm)")
boxplot(cbind(left,right), xlab="Hand", ylab="Digit length(mm)")
plot(left, right, xlab="left hand", ylab="right hand",
xlim=c(5.5,9), ylim=c(5.5,9))
plot(left, right, xlab="Left hand", ylab="Right hand",
xlim=c(5.5,9), ylim=c(5.5,9))
summary(left)
summary(right)
save( list=ls(), file="finger_data.rdata" )
save( list=ls(), file="finger_data.rdata" )
# Some Housekeeping
rm(list=ls()) # remove everything currently held in the R memory
# These are the lengths of my digits on my left and right hands
# measures in mm.
left <- c(5.8, 7.5, 8.5, 7.3, 5.8)
right <- c(5.7, 7.3, 8.3, 7.0, 5.6)
class(left)
class(right)
cbind(left, right)
boxplot(cbind(left,right))
boxplot(cbind(left,right), xlab="Hand", ylab="Digit length(mm)")
# you might want to plot one variable against another
plot(left, right, xlab="Left hand", ylab="Right hand",
xlim=c(5.5,9), ylim=c(5.5,9))
ablinec(5.5,5.5)
abline c(5.5,5.5)
abline (5.5,5.5)
abline (a=5.5,b=0.5)
plot(left, right, xlab="Left hand", ylab="Right hand",
xlim=c(5.5,9), ylim=c(5.5,9))
plot(left, right, xlab="Left hand", ylab="Right hand",
xlim=c(5.5,9), ylim=c(5.5,9))
abline (a=5.5,b=0.5)
# you might want to plot one variable against another
plot(left, right, xlab="Left hand", ylab="Right hand",xlim=c(5.5,9), ylim=c(5.5,9))
abline (a=5.5,b=0.5)
# you might want to plot one variable against another
plot(left, right, xlab="Left hand", ylab="Right hand",xlim=c(5.5,9), ylim=c(5.5,9))
abline (a=0,b=0.5)
# you might want to plot one variable against another
plot(left, right, xlab="Left hand", ylab="Right hand",xlim=c(5.5,9), ylim=c(5.5,9))
abline (a=0,b=0.45)
# you might want to plot one variable against another
plot(left, right, xlab="Left hand", ylab="Right hand",xlim=c(5.5,9), ylim=c(5.5,9))
abline (a=0,b=1)
hist(left)
hist(right)
hist(left, breaks=20, main=”Breaks=20″)
hist(left, breaks=20, main="Breaks=20")
hist(left, breaks=0.1, main="Breaks=0.1")
hist(left, breaks=1, main="Breaks=1")
hist(left, breaks=2, main="Breaks=2")
hist(left, breaks=3, main="Breaks=3")
hist(left, breaks=4, main="Breaks=4")
hist(left, breaks=1, col=”lightgreen”, main="Breaks=1")
hist(left, breaks=1, col="lightgreen", main="Breaks=1")
hist(left, breaks=4, main="Breaks=4")
hist(left)
hist(left, breaks=4, main="Breaks=4")
hist(left)
hist(left)
hist(left, breaks=4, main="Breaks=4")
hist(left, breaks=1, col="lightgreen", main="Breaks=1")
hist(left, breaks=2, col="lightgreen", main="Breaks=2")
hist(left, breaks=6, col="lightgreen", main="Breaks=6")
hist(left, breaks=16, col="lightgreen", main="Breaks=16")
summary(left)
summary(right)
data()
Orange
mydata
mydata <- read.table("finger_lengths.csv", header=TRUE, sep=",")
mydata
boxplot(finger.length~hand, xlab="Hand", ylab="digit length(mm)")
boxplot(finger.length~hand, xlab="Hand", ylab="digit length(mm)", data=mydata)
library(help="datasets")
data()
?orange
?Orange
atlas
install.packages("ade4")
library(ade4)
atlas
data(atlas)
atlas
install.packages("mefa4")
library(mefa4)
data(mefa4)
data(package='mefa4')
ambibirds
data(ambibirds)
data(abmibirds)
abmibirds
head(abmibirds)
data()
atlas
bseta197
bseta197
baran95
data()
detach("package:ade4", unload=TRUE)
data()
LakeHuron
airquality
data()
Orange
PlantGrowth
boxplot(weight~group, xlab="Group", ylab="weight", data=PlantGrowth)
boxplot(weight~group, xlab="Group", ylab="weight", data=PlantGrowth)
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table(dia.url)
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table(dia.url)
dia.url <- 'http://www.amstat.org/publications/jse/v9n2/4cdata.txt'
diamonds <- read.table(dia.url)
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table(dia.url)
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table.url(dia.url)
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
dia.url
sample <- read.table("http://www.ats.ucla.edu/stat/examples/ara/angell.txt")
sample
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table.url(dia.url)
diamonds <- read.table (dia.url)
getwd()
setwd("~/")
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table (dia.url)
setwd("~/Documents/PROJECTS")
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table (dia.url)
diamonds <- read.table (dia.url)
str(dia.url)
diamonds <- read.table ("http://www.amstat.org/publications/jse/v9n2/4cdata.txt")
diamonds <- read.table ("http://www.amstat.org/publications/jse/v9n2/4cdata.txt", sep="")
diamonds <- read.table (paste("http://www.amstat.org/publications/jse/v9n2/4cdata.txt", sep=""))
dia.url <- url("http://www.amstat.org/publications/jse/v9n2/4cdata.txt")
diamonds <- read.table (dia.url)
diamonds <- read.csv (dia.url)
diamonds <- read.table (dia.url)
dia.url <- url("http://www.amstat.org/publications/jse/v9n2/4cdata.txt")
diamonds <- read.table (dia.url)
dia.url <- url("http://www.amstat.org/publications/jse/v9n2/4cdata.txt")
diamonds <- read.table (dia.url)
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt"
diamonds <- read.table (dia.url)
dia.url <- "http://www.amstat.org/publications/jse/v9n2/4cdata.txt", header =FALSE
diamonds <- read.table ("http://www.amstat.org/publications/jse/v9n2/4cdata.txt", header=FALSE))
diamonds <- read.table ("http://www.amstat.org/publications/jse/v9n2/4cdata.txt", header=FALSE)
df <- read.table("https://s3.amazonaws.com/assets.datacamp.com/blog_assets/test.txt",
header = FALSE)
df
diamonds <- read.table ("https://www.amstat.org/publications/jse/v9n2/4cdata.txt", header=FALSE)
diamonds
SwissSquirrels <- read.table ("https://www.mbr-pwrc.usgs.gov/pubanalysis/keryroylebook/SwissSquirrels.txt")
rm(list=ls()) # remove everything currently held in the R memory
data()
detach("package:datasets", unload=TRUE)
data()
detach("package:sp", unload=TRUE)
data()
data()
data(package = .packages(all.available = TRUE))
data()
R data sets
data()
data() or library(help="datasets") # brings the list of build in datasets
data()
library(help="datasets") # brings the list of build in datasets
data() # brings the list of R build in datasets
library(help="datasets") # brings the list of R build in datasets
Orange
data() # brings the list of R build in datasets
library(help="datasets") # brings the list of R build in datasets
Orange
Orange
data(Orange)
data(Orange)
Orange
SwissSquirrels <- read.table ("https://www.mbr-pwrc.usgs.gov/pubanalysis/keryroylebook/SwissSquirrels.txt")
head(SwissSquirrels)
boxplot(finger.length~hand, xlab="Hand", ylab="digit length(mm)", data=mydata) # Finger.length on y axis and hand on x axis
mydata <- read.table("finger_lengths.csv", header=TRUE, sep=",") #Be sure your file is in the R working directory!!!
setwd("~/Documents/PROJECTS/R_lectures/L3")
boxplot(finger.length~hand, xlab="Hand", ylab="digit length(mm)", data=mydata) # Finger.length on y axis and hand on x axis
mydata <- read.table("finger_lengths.csv", header=TRUE, sep=",") #Be sure your file is in the R working directory!!!
mydata
mydata[1,1] # extract first row and column
mydata[1,2] # extract first row and second column
mydata[1,3] # extract first row and third column
mydata[,3] # extract third column
mydata[1,1] # extract first row and column
mydata[1,2] # extract first row and second column
mydata[1,3] # extract first row and third column
mydata[ ,3] # extract third column
mydata[1,1] # extract first row and column
mydata[1,2] # extract first row and second column
mydata[1,3] # extract first row and third column
mydata[ ,3] # extract third column
mydata <- read.table("finger_lengths.csv", header=TRUE, sep=",") #Be sure your file is in the R working directory!!!
mydata
mydata[1,1] # extract first row and column
mydata[1,2] # extract first row and second column
mydata[1,3] # extract first row and third column
mydata[ ,3] # extract third column
mydata[, c(1, 3)] # extract first and third column
mydata[, c(-1, -3)] # extract everything excpet first and third column
mydata$digit #extract all values for variable digit
mydata$hand  #extract all values for variable hand
mydata$finger.length  #extract all values for variable finger.length
data(Orange) # reads in the data in R environment
Orange # shows Orange dataset
?Orange # help file describes dataset Orange in detail
SwissSquirrels <- read.table ("https://www.mbr-pwrc.usgs.gov/pubanalysis/keryroylebook/SwissSquirrels.txt")
head(SwissSquirrels)
boxplot(finger.length~hand, xlab="Hand", ylab="digit length(mm)", data=mydata) # Finger.length on y axis and hand on x axis
